name: Trigger and Wait

description: Custom action to trigger another workflow and wait for it to complete

inputs:
  owner:
    description: 'Repository owner'
    required: true
  repo:
    description: 'Repository name'
    required: true
  github_token:
    description: 'GitHub token'
    required: true
  workflow_file_name:
    description: 'Workflow file name'
    required: true
  wait_interval:
    description: 'Interval to check the status'
    required: true
  propagate_failure:
    description: 'Propagate failure to main workflow'
    required: false
    default: 'true'
  trigger_workflow:
    description: 'Trigger workflow'
    required: true
    default: 'true'
  wait_workflow:
    description: 'Wait for workflow to complete'
    required: true
    default: 'true'

runs:
  using: "composite"
  steps:
    - name: Trigger workflow
      run: |
        run_id=$(curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ inputs.github_token }}" \
          https://api.github.com/repos/${{ inputs.owner }}/${{ inputs.repo }}/actions/workflows/${{ inputs.workflow_file_name }}/dispatches \
          -d '{"ref": "main"}' \
          | jq -r '.id')
        echo "run_id=$run_id" >> $GITHUB_ENV

    - name: Wait for workflow to complete
      run: |
        while [[ "$status" != "completed" ]]; do
          sleep ${{ inputs.wait_interval }}
          status=$(curl -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ inputs.github_token }}" \
            https://api.github.com/repos/${{ inputs.owner }}/${{ inputs.repo }}/actions/runs/$run_id \
            | jq -r '.status')
          conclusion=$(curl -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ inputs.github_token }}" \
            https://api.github.com/repos/${{ inputs.owner }}/${{ inputs.repo }}/actions/runs/$run_id \
            | jq -r '.conclusion')
          echo "status=$status" >> $GITHUB_ENV
          echo "conclusion=$conclusion" >> $GITHUB_ENV
        done
        if [[ "$conclusion" != "success" && "${{ inputs.propagate_failure }}" == "true" ]]; then
          exit 1
        fi
