# 工作流程名称
name: Convert Ruleset_YAML_to_MRS

# 触发条件
on:
  schedule:
    - cron: '*/20 * * * *'  # 每20分钟运行一次
  workflow_dispatch:  # 允许手动触发

# 定义作业
jobs:
  update-and-convert:
    runs-on: windows-latest  # 使用 Windows 运行环境

    steps:
      # 步骤1：检出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v2

      # 步骤2：检查并下载 mihomo（仅在第一次运行时）
      - name: Check and download mihomo v1.18.7 if needed
        shell: powershell
        run: |
          # 检查根目录下是否已有 mihomo.exe 和 .mihomo_downloaded 标记文件
          if (-not (Test-Path "./mihomo.exe") -or -not (Test-Path "./.mihomo_downloaded")) {
            Write-Host "mihomo.exe or .mihomo_downloaded not found, downloading..."
            $url = "https://github.com/MetaCubeX/mihomo/releases/download/v1.18.7/mihomo-windows-amd64-compatible-v1.18.7.zip"
            $zipFile = "mihomo.zip"
            $maxAttempts = 5
            $attempt = 1
            # 尝试下载和解压，最多重试5次
            do {
              try {
                Write-Host "Downloading mihomo v1.18.7 (Attempt $attempt)..."
                # 下载文件，设置300秒超时
                Invoke-WebRequest -Uri $url -OutFile $zipFile -TimeoutSec 300
                if (Test-Path $zipFile) {
                  # 解压文件
                  Expand-Archive -Path $zipFile -DestinationPath ./ -Force
                  # 删除zip文件
                  Remove-Item $zipFile
                  # 创建标记文件，表示已下载
                  New-Item -ItemType File -Path "./.mihomo_downloaded" -Force
                  Write-Host "mihomo v1.18.7 downloaded and extracted successfully."
                  break
                }
              }
              catch {
                Write-Host "Download failed. Retrying..."
                $attempt++
              }
            } while ($attempt -le $maxAttempts)
            # 如果所有尝试都失败，则退出
            if ($attempt -gt $maxAttempts) {
              Write-Host "Failed to download mihomo after $maxAttempts attempts. Exiting."
              exit 1
            }
          }
          else {
            Write-Host "mihomo.exe already exists, skipping download."
          }

      # 步骤3：运行Python脚本
      - name: Run Python script
        run: python convert_ruleset.py

      # 步骤4：提交更改
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update ruleset files" -a || echo "No changes to commit"

      # 步骤5：推送更改到仓库（添加重试机制）
      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $maxAttempts = 5  # 最大尝试次数
          $attempt = 1
          do {
            try {
              git push
              Write-Host "Successfully pushed changes to the repository."
              break  # 推送成功，退出循环
            }
            catch {
              if ($attempt -lt $maxAttempts) {
                # 如果还有剩余尝试次数，等待30秒后重试
                Write-Host "Push failed. Retrying in 30 seconds... (Attempt $attempt of $maxAttempts)"
                Start-Sleep -Seconds 30
                $attempt++
              }
              else {
                # 如果所有尝试都失败，报错并退出
                Write-Host "Failed to push changes after $maxAttempts attempts. Exiting."
                exit 1
              }
            }
          } while ($attempt -le $maxAttempts)  # 继续尝试，直到成功或达到最大尝试次数
