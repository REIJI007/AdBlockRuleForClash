name: Generate_Matcher_Ruleset_entries_SURGE

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '*/20 * * * *'  # 每20分钟运行一次

jobs:
  process-files:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2  # 检出仓库代码

    - name: Process adblock_reject_change.txt
      run: |
        # 处理 adblock_reject_change.txt 文件
        # 保留注释行和空行
        # 去掉每行最前面的 '- ' 和空格，并将条目左对齐
        awk '/^#/ {print} /^[^#]/ {sub(/^[ \t]*-[ \t]*/, ""); print}' adblock_reject_change.txt > adblock_reject_surge.txt

    - name: Commit and push changes
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        # 配置 Git
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        # 设置远程仓库 URL，使用 TOKEN 进行身份验证
        git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
        # 添加生成的文件到 Git
        git add adblock_reject_surge.txt
        # 强制提交更改，即使没有变化
        git commit -m "Update adblock_reject_surge.txt with processed entries" --allow-empty

        # 定义最大重试次数
        max_retries=5
        retry_count=0

        # 尝试推送更改
        until [ "$retry_count" -ge "$max_retries" ]
        do
          git push origin main --force && break
          retry_count=$((retry_count+1))
          echo "Push failed, retrying in 10 seconds... ($retry_count/$max_retries)"
          sleep 10
          git pull origin main --rebase
        done

        if [ "$retry_count" -ge "$max_retries" ]; then
          echo "Max retries reached. Push failed."
          exit 1
        fi
