name: Process adblock files  # 工作流名称

on:
  push:
    branches: [ main ]  # 在推送到 main 分支时触发
  pull_request:
    branches: [ main ]  # 在 pull request 针对 main 分支时触发
  workflow_dispatch:  # 允许手动触发工作流
  schedule:
    - cron: '*/20 * * * *'  # 每20分钟触发一次

jobs:
  process-files:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 版本作为运行环境

    steps:
    - uses: actions/checkout@v2  # 使用官方的 checkout 操作来检出代码

    - name: Process adblock_reject.txt  # 处理 adblock_reject.txt 文件
      run: |
        mkdir -p $(dirname adblock_reject_change.txt)
        tail -n +2 adblock_reject.txt | sed 's/$/,REJECT/' | sed 's/^[[:space:]]*//' > adblock_reject_change.txt
        # 创建目录（如果不存在），然后使用 tail 命令去掉第一行，使用 sed 命令在每行末尾添加 ",REJECT"，并去除行首的空白字符，保存为 adblock_reject_change.txt

    - name: Process adblock_reject.yaml  # 处理 adblock_reject.yaml 文件
      run: |
        mkdir -p $(dirname adblock_reject_change.yaml)
        tail -n +2 adblock_reject.yaml | sed 's/$/,REJECT/' | sed 's/^[[:space:]]*//' > adblock_reject_change.yaml
        # 创建目录（如果不存在），然后使用 tail 命令去掉第一行，使用 sed 命令在每行末尾添加 ",REJECT"，并去除行首的空白字符，保存为 adblock_reject_change.yaml

    - name: Process adblock_reject.mrs  # 处理 adblock_reject.mrs 文件
      run: |
        mkdir -p $(dirname adblock_reject_change.mrs)
        tail -n +2 adblock_reject.mrs | sed 's/$/,REJECT/' | sed 's/^[[:space:]]*//' > adblock_reject_change.mrs
        # 创建目录（如果不存在），然后使用 tail 命令去掉第一行，使用 sed 命令在每行末尾添加 ",REJECT"，并去除行首的空白字符，保存为 adblock_reject_change.mrs

    - name: Commit changes  # 提交更改
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        git config --local user.email "action@github.com"  # 配置 Git 用户邮箱
        git config --local user.name "GitHub Action"  # 配置 Git 用户名
        git add adblock_reject_change.txt adblock_reject_change.yaml adblock_reject_change.mrs  # 添加更改的文件
        git commit -m "Process adblock files: remove first line, add REJECT, left align"
        git push origin main --force  # 强制推送到 main 分支
        # 提交更改，并强制推送覆盖同名文件
