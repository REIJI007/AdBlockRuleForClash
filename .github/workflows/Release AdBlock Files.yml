name: Periodic Release  # 工作流名称

on:
  schedule:
    - cron: '*/20 * * * *'  # 每20分钟运行一次
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  create-release:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 版本作为运行环境
    steps:
      - name: Checkout code  # 检出代码
        uses: actions/checkout@v2  # 使用官方的checkout操作来检出代码

      - name: Get current time  # 获取当前时间
        id: current-time  # 设置步骤ID，以便后续步骤引用
        run: echo "time=$(date +'%y%m%d%H%M')" >> $GITHUB_OUTPUT  # 获取当前时间，并将其输出为GitHub Actions的环境变量

      - name: Create Release  # 创建发布版本
        id: create_release  # 设置步骤ID，以便后续步骤引用
        uses: actions/create-release@v1  # 使用官方的create-release操作来创建发布版本
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用GitHub Token进行身份验证
        with:
          tag_name: release-${{ steps.current-time.outputs.time }}  # 使用当前时间作为标签名称
          release_name: Release ${{ steps.current-time.outputs.time }}  # 使用当前时间作为发布名称
          body: "Process adblock files: remove first line, add REJECT, left align"  # 发布说明
          draft: false  # 发布为正式版本
          prerelease: false  # 不发布为预发布版本

      - name: Upload adblock_reject.txt  # 上传 adblock_reject.txt 文件
        uses: actions/upload-release-asset@v1  # 使用官方的upload-release-asset操作来上传发布资源
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用GitHub Token进行身份验证
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # 使用创建发布步骤的上传URL
          asset_path: ./adblock_reject.txt  # 本地文件路径
          asset_name: adblock_reject.txt  # 上传到GitHub上的文件名称
          asset_content_type: text/plain  # 文件的MIME类型

      - name: Upload adblock_reject.yaml  # 上传 adblock_reject.yaml 文件
        uses: actions/upload-release-asset@v1  # 使用官方的upload-release-asset操作来上传发布资源
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用GitHub Token进行身份验证
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # 使用创建发布步骤的上传URL
          asset_path: ./adblock_reject.yaml  # 本地文件路径
          asset_name: adblock_reject.yaml  # 上传到GitHub上的文件名称
          asset_content_type: application/x-yaml  # 文件的MIME类型

      - name: Upload adblock_reject_change.txt  # 上传 adblock_reject_change.txt 文件
        uses: actions/upload-release-asset@v1  # 使用官方的upload-release-asset操作来上传发布资源
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用GitHub Token进行身份验证
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # 使用创建发布步骤的上传URL
          asset_path: ./adblock_reject_change.txt  # 本地文件路径
          asset_name: adblock_reject_change.txt  # 上传到GitHub上的文件名称
          asset_content_type: text/plain  # 文件的MIME类型

      - name: Upload adblock_reject_change.yaml  # 上传 adblock_reject_change.yaml 文件
        uses: actions/upload-release-asset@v1  # 使用官方的upload-release-asset操作来上传发布资源
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用GitHub Token进行身份验证
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  # 使用创建发布步骤的上传URL
          asset_path: ./adblock_reject_change.yaml  # 本地文件路径
          asset_name: adblock_reject_change.yaml  # 上传到GitHub上的文件名称
          asset_content_type: application/x-yaml  # 文件的MIME类型
