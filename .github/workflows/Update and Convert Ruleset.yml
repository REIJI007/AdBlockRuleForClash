# 工作流程名称
name: Update and Convert Ruleset

# 触发条件
on:
  schedule:
    - cron: '*/20 * * * *'  # 每20分钟运行一次
  workflow_dispatch:  # 允许手动触发

# 定义作业
jobs:
  update-and-convert:
    runs-on: windows-latest  # 使用 Windows 运行环境
    steps:
      # 步骤1：检出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v2

      # 步骤2：检查并下载 mihomo（仅在第一次运行时）
      - name: Check and download mihomo v1.18.7 if needed
        shell: powershell
        run: |
          # 检查根目录下是否已有 mihomo.exe 和 .mihomo_downloaded 标记文件
          if (-not (Test-Path "./mihomo.exe") -or -not (Test-Path "./.mihomo_downloaded")) {
            Write-Host "mihomo.exe or .mihomo_downloaded not found, downloading..."
            $url = "https://github.com/MetaCubeX/mihomo/releases/download/v1.18.7/mihomo-windows-amd64-compatible-v1.18.7.zip"
            $zipFile = "mihomo.zip"
            $maxAttempts = 5
            $attempt = 1

            # 尝试下载和解压，最多重试5次
            do {
              try {
                Write-Host "Downloading mihomo v1.18.7 (Attempt $attempt)..."
                Invoke-WebRequest -Uri $url -OutFile $zipFile -TimeoutSec 300
                if (Test-Path $zipFile) {
                  Write-Host "Extracting mihomo..."
                  Expand-Archive -Path $zipFile -DestinationPath . -Force
                  New-Item -ItemType File -Path "./.mihomo_downloaded" -Force
                  Write-Host "mihomo downloaded and extracted successfully."
                  Remove-Item $zipFile -Force
                  break
                }
              } catch {
                Write-Host "Download failed (Attempt $attempt). Retrying..."
                $attempt++
                if ($attempt -gt $maxAttempts) {
                  throw "Failed to download mihomo after $maxAttempts attempts."
                }
              }
            } while ($true)
          } else {
            Write-Host "mihomo.exe and .mihomo_downloaded found, skipping download."
          }

      # 步骤3：使用 mihomo 转换规则集
      - name: Convert ruleset
        shell: powershell
        run: ./mihomo.exe convert-ruleset domain/ipcidr yaml adblock_reject.yaml adblock_reject.mrs

      # 新增步骤：拉取最新更改
      - name: Pull latest changes
        shell: bash
        run: git pull origin main

      # 步骤4：提交更改
      - name: Commit changes
        shell: bash
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add adblock_reject.mrs
          git commit -m "Update adblock_reject.mrs and add mihomo.exe" || echo "No changes to commit"

      # 步骤5：强制推送更改
      - name: Force push changes
        shell: bash
        run: git push -f origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
