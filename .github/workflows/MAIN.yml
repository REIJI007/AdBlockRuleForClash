name: Run Workflows Sequentially

on:
  workflow_dispatch:
  schedule:
    - cron: '*/20 * * * *'

jobs:
  run_workflows:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run AdBlock Rule Generator YAML
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            execSync('gh workflow run Run_AdBlock_Rule_Generator_YAML.yml', { stdio: 'inherit' });

      - name: Wait for AdBlock Rule Generator YAML to complete
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            let runStatus;
            do {
              runStatus = execSync('gh run list --workflow=Run_AdBlock_Rule_Generator_YAML.yml --limit=1').toString();
              if (runStatus.includes('completed')) {
                if (runStatus.includes('success')) {
                  console.log('AdBlock Rule Generator YAML completed successfully.');
                  break;
                } else {
                  throw new Error('AdBlock Rule Generator YAML failed.');
                }
              }
              console.log('Waiting for AdBlock Rule Generator YAML to complete...');
              execSync('sleep 10');
            } while (!runStatus.includes('completed'));

      - name: Run AdBlock Rule Generator TXT
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            execSync('gh workflow run Run_AdBlock_Rule_Generator_TXT.yml', { stdio: 'inherit' });

      - name: Wait for AdBlock Rule Generator TXT to complete
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            let runStatus;
            do {
              runStatus = execSync('gh run list --workflow=Run_AdBlock_Rule_Generator_TXT.yml --limit=1').toString();
              if (runStatus.includes('completed')) {
                if (runStatus.includes('success')) {
                  console.log('AdBlock Rule Generator TXT completed successfully.');
                  break;
                } else {
                  throw new Error('AdBlock Rule Generator TXT failed.');
                }
              }
              console.log('Waiting for AdBlock Rule Generator TXT to complete...');
              execSync('sleep 10');
            } while (!runStatus.includes('completed'));

      - name: Convert Ruleset YAML to MRS
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            execSync('gh workflow run Convert_Ruleset_YAML_to_MRS.yml', { stdio: 'inherit' });

      - name: Wait for Convert Ruleset YAML to MRS to complete
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            let runStatus;
            do {
              runStatus = execSync('gh run list --workflow=Convert_Ruleset_YAML_to_MRS.yml --limit=1').toString();
              if (runStatus.includes('completed')) {
                if (runStatus.includes('success')) {
                  console.log('Convert Ruleset YAML to MRS completed successfully.');
                  break;
                } else {
                  throw new Error('Convert Ruleset YAML to MRS failed.');
                }
              }
              console.log('Waiting for Convert Ruleset YAML to MRS to complete...');
              execSync('sleep 10');
            } while (!runStatus.includes('completed'));

      - name: Generate Matcher Ruleset entries (CLASH)
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            execSync('gh workflow run Generate_Matcher_Ruleset_entries_CLASH.yml', { stdio: 'inherit' });

      - name: Wait for Generate Matcher Ruleset entries (CLASH) to complete
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            let runStatus;
            do {
              runStatus = execSync('gh run list --workflow=Generate_Matcher_Ruleset_entries_CLASH.yml --limit=1').toString();
              if (runStatus.includes('completed')) {
                if (runStatus.includes('success')) {
                  console.log('Generate Matcher Ruleset entries (CLASH) completed successfully.');
                  break;
                } else {
                  throw new Error('Generate Matcher Ruleset entries (CLASH) failed.');
                }
              }
              console.log('Waiting for Generate Matcher Ruleset entries (CLASH) to complete...');
              execSync('sleep 10');
            } while (!runStatus.includes('completed'));

      - name: Generate Matcher Ruleset entries (SURGE)
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            execSync('gh workflow run Generate_Matcher_Ruleset_entries_SURGE.yml', { stdio: 'inherit' });

      - name: Wait for Generate Matcher Ruleset entries (SURGE) to complete
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            let runStatus;
            do {
              runStatus = execSync('gh run list --workflow=Generate_Matcher_Ruleset_entries_SURGE.yml --limit=1').toString();
              if (runStatus.includes('completed')) {
                if (runStatus.includes('success')) {
                  console.log('Generate Matcher Ruleset entries (SURGE) completed successfully.');
                  break;
                } else {
                  throw new Error('Generate Matcher Ruleset entries (SURGE) failed.');
                }
              }
              console.log('Waiting for Generate Matcher Ruleset entries (SURGE) to complete...');
              execSync('sleep 10');
            } while (!runStatus.includes('completed'));

      - name: Release Adblock file
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            execSync('gh workflow run Release_Adblock_file.yml', { stdio: 'inherit' });

      - name: Wait for Release Adblock file to complete
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            let runStatus;
            do {
              runStatus = execSync('gh run list --workflow=Release_Adblock_file.yml --limit=1').toString();
              if (runStatus.includes('completed')) {
                if (runStatus.includes('success')) {
                  console.log('Release Adblock file completed successfully.');
                  break;
                } else {
                  throw new Error('Release Adblock file failed.');
                }
              }
              console.log('Waiting for Release Adblock file to complete...');
              execSync('sleep 10');
            } while (!runStatus.includes('completed'));
