name: Run Workflows Sequentially

on:
  workflow_dispatch:
  schedule:
    - cron: '*/20 * * * *'

jobs:
  run_workflows:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Trigger Run_AdBlock_Rule_Generator_YAML
        id: run_adblock_rule_generator_yaml
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          workflow_id="Run_AdBlock_Rule_Generator_YAML.yml"
          ref="main"
          response=$(curl -X POST -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/workflows/$workflow_id/dispatches" \
            -d "{\"ref\":\"$ref\"}")
          echo "Triggered workflow $workflow_id"

      - name: Wait for Run_AdBlock_Rule_Generator_YAML
        id: wait_for_adblock_rule_generator_yaml
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          workflow_id="Run_AdBlock_Rule_Generator_YAML.yml"
          ref="main"
          run_id=""
          while [ -z "$run_id" ]; do
            run_id=$(curl -H "Authorization: token $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/workflows/$workflow_id/runs?branch=$ref&status=in_progress" | jq -r '.workflow_runs[0].id')
            if [ -z "$run_id" ]; then
              echo "Waiting for workflow $workflow_id to start..."
              sleep 2
            fi
          done
          echo "Run ID: $run_id"
          status=""
          while [ "$status" != "completed" ]; do
            status=$(curl -H "Authorization: token $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/runs/$run_id" | jq -r '.status')
            echo "Waiting for workflow $workflow_id to complete..."
            sleep 10
          done
          conclusion=$(curl -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/runs/$run_id" | jq -r '.conclusion')
          if [ "$conclusion" != "success" ]; then
            echo "Workflow $workflow_id failed with conclusion $conclusion"
            exit 1
          fi

      - name: Trigger Run_AdBlock_Rule_Generator_TXT
        if: success()
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          workflow_id="Run_AdBlock_Rule_Generator_TXT.yml"
          ref="main"
          response=$(curl -X POST -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/workflows/$workflow_id/dispatches" \
            -d "{\"ref\":\"$ref\"}")
          echo "Triggered workflow $workflow_id"

      - name: Wait for Run_AdBlock_Rule_Generator_TXT
        if: success()
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          workflow_id="Run_AdBlock_Rule_Generator_TXT.yml"
          ref="main"
          run_id=""
          while [ -z "$run_id" ]; do
            run_id=$(curl -H "Authorization: token $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/workflows/$workflow_id/runs?branch=$ref&status=in_progress" | jq -r '.workflow_runs[0].id')
            if [ -z "$run_id" ]; then
              echo "Waiting for workflow $workflow_id to start..."
              sleep 2
            fi
          done
          echo "Run ID: $run_id"
          status=""
          while [ "$status" != "completed" ]; do
            status=$(curl -H "Authorization: token $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/runs/$run_id" | jq -r '.status')
            echo "Waiting for workflow $workflow_id to complete..."
            sleep 10
          done
          conclusion=$(curl -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/runs/$run_id" | jq -r '.conclusion')
          if [ "$conclusion" != "success" ]; then
            echo "Workflow $workflow_id failed with conclusion $conclusion"
            exit 1
          fi

      - name: Trigger Convert_Ruleset_YAML_to_MRS
        if: success()
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          workflow_id="Convert_Ruleset_YAML_to_MRS.yml"
          ref="main"
          response=$(curl -X POST -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/workflows/$workflow_id/dispatches" \
            -d "{\"ref\":\"$ref\"}")
          echo "Triggered workflow $workflow_id"

      - name: Wait for Convert_Ruleset_YAML_to_MRS
        if: success()
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          workflow_id="Convert_Ruleset_YAML_to_MRS.yml"
          ref="main"
          run_id=""
          while [ -z "$run_id" ]; do
            run_id=$(curl -H "Authorization: token $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/workflows/$workflow_id/runs?branch=$ref&status=in_progress" | jq -r '.workflow_runs[0].id')
            if [ -z "$run_id" ]; then
              echo "Waiting for workflow $workflow_id to start..."
              sleep 2
            fi
          done
          echo "Run ID: $run_id"
          status=""
          while [ "$status" != "completed" ]; do
            status=$(curl -H "Authorization: token $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/runs/$run_id" | jq -r '.status')
            echo "Waiting for workflow $workflow_id to complete..."
            sleep 10
          done
          conclusion=$(curl -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/runs/$run_id" | jq -r '.conclusion')
          if [ "$conclusion" != "success" ]; then
            echo "Workflow $workflow_id failed with conclusion $conclusion"
            exit 1
          fi

      - name: Trigger Generate_Matcher_Ruleset_entries_CLASH
        if: success()
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          workflow_id="Generate_Matcher_Ruleset_entries_CLASH.yml"
          ref="main"
          response=$(curl -X POST -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/workflows/$workflow_id/dispatches" \
            -d "{\"ref\":\"$ref\"}")
          echo "Triggered workflow $workflow_id"

      - name: Wait for Generate_Matcher_Ruleset_entries_CLASH
        if: success()
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          workflow_id="Generate_Matcher_Ruleset_entries_CLASH.yml"
          ref="main"
          run_id=""
          while [ -z "$run_id" ]; do
            run_id=$(curl -H "Authorization: token $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/workflows/$workflow_id/runs?branch=$ref&status=in_progress" | jq -r '.workflow_runs[0].id')
            if [ -z "$run_id" ]; then
              echo "Waiting for workflow $workflow_id to start..."
              sleep 2
            fi
          done
          echo "Run ID: $run_id"
          status=""
          while [ "$status" != "completed" ]; do
            status=$(curl -H "Authorization: token $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/runs/$run_id" | jq -r '.status')
            echo "Waiting for workflow $workflow_id to complete..."
            sleep 10
          done
          conclusion=$(curl -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/runs/$run_id" | jq -r '.conclusion')
          if [ "$conclusion" != "success" ]; then
            echo "Workflow $workflow_id failed with conclusion $conclusion"
            exit 1
          fi

      - name: Trigger Generate_Matcher_Ruleset_entries_SURGE
        if: success()
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          workflow_id="Generate_Matcher_Ruleset_entries_SURGE.yml"
          ref="main"
          response=$(curl -X POST -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/workflows/$workflow_id/dispatches" \
            -d "{\"ref\":\"$ref\"}")
          echo "Triggered workflow $workflow_id"

      - name: Wait for Generate_Matcher_Ruleset_entries_SURGE
        if: success()
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          workflow_id="Generate_Matcher_Ruleset_entries_SURGE.yml"
          ref="main"
          run_id=""
          while [ -z "$run_id" ]; do
            run_id=$(curl -H "Authorization: token $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/workflows/$workflow_id/runs?branch=$ref&status=in_progress" | jq -r '.workflow_runs[0].id')
            if [ -z "$run_id" ]; then
              echo "Waiting for workflow $workflow_id to start..."
              sleep 2
            fi
          done
          echo "Run ID: $run_id"
          status=""
          while [ "$status" != "completed" ]; do
            status=$(curl -H "Authorization: token $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/runs/$run_id" | jq -r '.status')
            echo "Waiting for workflow $workflow_id to complete..."
            sleep 10
          done
          conclusion=$(curl -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/runs/$run_id" | jq -r '.conclusion')
          if [ "$conclusion" != "success" ]; then
            echo "Workflow $workflow_id failed with conclusion $conclusion"
            exit 1
          fi

      - name: Trigger Release_Adblock_file
        if: success()
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          workflow_id="Release_Adblock_file.yml"
          ref="main"
          response=$(curl -X POST -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/workflows/$workflow_id/dispatches" \
            -d "{\"ref\":\"$ref\"}")
          echo "Triggered workflow $workflow_id"

      - name: Wait for Release_Adblock_file
        if: success()
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          workflow_id="Release_Adblock_file.yml"
          ref="main"
          run_id=""
          while [ -z "$run_id" ]; do
            run_id=$(curl -H "Authorization: token $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/workflows/$workflow_id/runs?branch=$ref&status=in_progress" | jq -r '.workflow_runs[0].id')
            if [ -z "$run_id" ]; then
              echo "Waiting for workflow $workflow_id to start..."
              sleep 2
            fi
          done
          echo "Run ID: $run_id"
          status=""
          while [ "$status" != "completed" ]; do
            status=$(curl -H "Authorization: token $TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/runs/$run_id" | jq -r '.status')
            echo "Waiting for workflow $workflow_id to complete..."
            sleep 10
          done
          conclusion=$(curl -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/REIJI007/AdBlock_Rule_For_Clash/actions/runs/$run_id" | jq -r '.conclusion')
          if [ "$conclusion" != "success" ]; then
            echo "Workflow $workflow_id failed with conclusion $conclusion"
            exit 1
          fi
